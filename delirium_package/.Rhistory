geom_text(aes(x = t0, y = id - .1, color = event, label = event))
tibble(id = c(rep(1,2), rep(2,2), rep(3,3)),
t0 = c(10, 15, 15, 20, 5, 15, 25),
t1 = c(15, NA, 20, NA, 10, 20, NA),
event = c("coma", "death", "delirium", "death", "coma", "coma", "discharge"),
delirium = c(0,0,1,0,0,0,0),
coma = c(1, 0, 1, 0, 1, 1, 0),
death = c(0, 1, 0, 1, 0, 0, 0),
discharge = c(0,0,0,0,0,0,1)) %>%
ggplot() +
geom_segment(aes(x = t0, xend = t1,
y = id,
yend = id,
color = event))+
geom_point(aes(x = t0,
y = id,
color = event)) +
geom_text(aes(x = t0, y = id - .1, color = event, label = event))+
theme_bw() +
theme(legend.position = "none")
tibble(id = c(rep(1,2), rep(2,2), rep(3,3)),
t0 = c(10, 15, 15, 20, 5, 15, 25),
t1 = c(15, NA, 20, NA, 10, 20, NA),
event = c("coma", "death", "delirium", "death", "coma", "coma", "discharge"),
delirium = c(0,0,1,0,0,0,0),
coma = c(1, 0, 1, 0, 1, 1, 0),
death = c(0, 1, 0, 1, 0, 0, 0),
discharge = c(0,0,0,0,0,0,1)) %>%
ggplot() +
geom_segment(aes(x = t0, xend = t1,
y = id,
yend = id,
color = event))+
geom_point(aes(x = t0,
y = id,
color = event)) +
geom_text(aes(x = t0, y = id - .1, color = event, label = event))+
theme_bw() +
theme(legend.position = "none") +
scale_y_continuous(breaks = 1:3)
tibble(id = c(rep(1,2), rep(2,2), rep(3,3)),
t0 = c(10, 15, 15, 20, 5, 15, 25),
t1 = c(15, NA, 20, NA, 10, 20, NA),
event = c("coma", "death", "delirium", "death", "coma", "coma", "discharge"),
delirium = c(0,0,1,0,0,0,0),
coma = c(1, 0, 1, 0, 1, 1, 0),
death = c(0, 1, 0, 1, 0, 0, 0),
discharge = c(0,0,0,0,0,0,1)) %>%
ggplot() +
geom_segment(aes(x = t0, xend = t1,
y = id,
yend = id,
color = event))+
geom_point(aes(x = t0,
y = id,
color = event)) +
geom_text(aes(x = t0, y = id - .1, color = event, label = event))+
theme_bw() +
theme(legend.position = "none") +
scale_y_continuous("Patient ID",breaks = 1:3)+
scale_x_continuous("Days since Randomization")
tibble(id = c(rep(1,2), rep(2,2), rep(3,3)),
t0 = c(10, 15, 15, 20, 5, 15, 25),
t1 = c(15, NA, 20, NA, 10, 20, NA),
event = c("coma", "death", "delirium", "death", "coma", "coma", "discharge"),
delirium = c(0,0,1,0,0,0,0),
coma = c(1, 0, 1, 0, 1, 1, 0),
death = c(0, 1, 0, 1, 0, 0, 0),
discharge = c(0,0,0,0,0,0,1)) %>%
ggplot() +
geom_segment(aes(x = t0, xend = t1,
y = id,
yend = id,
color = event))+
geom_point(aes(x = t0,
y = id,
color = event)) +
geom_text(aes(x = t0, y = id - .1, color = event, label = event))+
theme_bw() +
theme(legend.position = "none") +
scale_y_continuous("Patient ID",breaks = 1:3)+
scale_x_continuous("Days since Randomization", limits = c(0, 25))
tibble(id = c(rep(1,2), rep(2,2), rep(3,3), rep(4, 3)),
t0 = c(10, 15, 15, 20, 5, 15, 25, 0, 10, 20),
t1 = c(15, NA, 20, NA, 10, 20, NA, 5, 15, NA),
event = c("coma", "death", "delirium", "death",
"coma", "coma", "discharge",
"delirium", "delirium", "discharge"),
delirium = c(0,0,1,0,0,0,0,1,1,0),
coma = c(1, 0, 1, 0, 1, 1, 0,0,0,0),
death = c(0, 1, 0, 1, 0, 0, 0,0,0,0),
discharge = c(0,0,0,0,0,0,1,0,0,1)) %>%
ggplot() +
geom_segment(aes(x = t0, xend = t1,
y = id,
yend = id,
color = event))+
geom_point(aes(x = t0,
y = id,
color = event)) +
geom_text(aes(x = t0, y = id - .1, color = event, label = event))+
theme_bw() +
theme(legend.position = "none") +
scale_y_continuous("Patient ID",breaks = 1:3)+
scale_x_continuous("Days since Randomization", limits = c(0, 25))
tibble(id = c(rep(1,2), rep(2,2), rep(3,3), rep(4, 3)),
t0 = c(0, 0,
0, 0,
0, 10, 20, 0,
0, 5, 15, 0),
t1 = c(10,15,
15, 20,
5, 15, 25, 25,
0, 10, 20, 20),
risk = c("delirium","terminal",
"delirium","terminal",
"delirium", "delirium", "delirium", "terminal",
"delirium", "delirium", "delirium", "terminal"),
delirium = c(0,0,  1,0,  0,0,0,0,  1,1,0,0),
death = c(0,1,     0,1,  0,0,0,0,  0,0,0,0),
discharge = c(0,0,    0,0,  0,0,0,1,  0,0,0,1))
tibble(id = c(rep(1,2), rep(2,2), rep(3,4), rep(4, 4)),
t0 = c(0, 0,
0, 0,
0, 10, 20, 0,
0, 5, 15, 0),
t1 = c(10,15,
15, 20,
5, 15, 25, 25,
0, 10, 20, 20),
risk = c("delirium","terminal",
"delirium","terminal",
"delirium", "delirium", "delirium", "terminal",
"delirium", "delirium", "delirium", "terminal"),
delirium = c(0,0,  1,0,  0,0,0,0,  1,1,0,0),
death = c(0,1,     0,1,  0,0,0,0,  0,0,0,0),
discharge = c(0,0,    0,0,  0,0,0,1,  0,0,0,1))
tibble(id = c(rep(1,2), rep(2,2), rep(3,4), rep(4, 4)),
t0 = c(0, 0,
0, 0,
0, 10, 20, 0,
0, 5, 15, 0),
t1 = c(10,15,
15, 20,
5, 15, 25, 25,
0, 10, 20, 20),
risk = c("delirium","terminal",
"delirium","terminal",
"delirium", "delirium", "delirium", "terminal",
"delirium", "delirium", "delirium", "terminal"),
delirium = c(0,0,  1,0,  0,0,0,0,  1,1,0,0),
death = c(0,1,     0,1,  0,0,0,0,  0,0,0,0),
discharge = c(0,0,    0,0,  0,0,0,1,  0,0,0,1)) %>%
print.data.frame
tibble(id = c(rep(1,2), rep(2,2), rep(3,3), rep(4, 3)),
t0 = c(10, 15, 15, 20, 5, 15, 25, 0, 10, 20),
t1 = c(15, NA, 20, NA, 10, 20, NA, 5, 15, NA),
event = c("coma", "death", "delirium", "death",
"coma", "coma", "discharge",
"delirium", "delirium", "discharge"),
delirium = c(0,0,1,0,0,0,0,1,1,0),
coma = c(1, 0, 1, 0, 1, 1, 0,0,0,0),
death = c(0, 1, 0, 1, 0, 0, 0,0,0,0),
discharge = c(0,0,0,0,0,0,1,0,0,1)) %>%
ggplot() +
geom_segment(aes(x = t0, xend = t1,
y = id,
yend = id,
color = event))+
geom_point(aes(x = t0,
y = id,
color = event)) +
geom_text(aes(x = t0, y = id - .1, color = event, label = event))+
theme_bw() +
theme(legend.position = "none") +
scale_y_continuous("Patient ID",breaks = 1:4)+
scale_x_continuous("Days since Randomization", limits = c(0, 25))
tibble(id = c(rep(1,3), rep(2,3), rep(3,3), rep(4, 3)),
t0 = c(0, 0, 0,
0, 0, 0,
0,0,10,10,20,20,0,
0, 5, 15, 0),
t1 = c(10, 10, 15,
15, 20, 20,
5,5, 15,15, 25,25, 25,
0, 10, 20, 20),
risk = c("delirium", "coma", "terminal",
"delirium", "coma", "terminal",
"delirium", "coma","delirium", "coma","delirium", "coma", "terminal",
"delirium", "coma", "delirium", "coma", "delirium", "coma", "terminal"),
delirium = c(0,0,0,  1,0,0,  0,0,0,0,0,0,0,  1,0,1,0,0,0,0),
coma = c(0,1,0,  0,1,0,  0,1,0,1,0,1,0,  0,0,0,0,0,0,0),
death = c(0,0,1,     0,0,1,  0,0,0,0,0,0,0,  0,0,0,0,0,0,0),
discharge = c(0,0,0,    0,0,0,  0,0,0,0,0,0,0,  0,0,0,0,0,0,1)) %>%
print.data.frame
tibble(id = c(rep(1,3), rep(2,3), rep(3,7), rep(4, 7)),
t0 = c(0, 0, 0,
0, 0, 0,
0,0,10,10,20,20,0,
0, 5, 15, 0),
t1 = c(10, 10, 15,
15, 20, 20,
5,5, 15,15, 25,25, 25,
0, 10, 20, 20),
risk = c("delirium", "coma", "terminal",
"delirium", "coma", "terminal",
"delirium", "coma","delirium", "coma","delirium", "coma", "terminal",
"delirium", "coma", "delirium", "coma", "delirium", "coma", "terminal"),
delirium = c(0,0,0,  1,0,0,  0,0,0,0,0,0,0,  1,0,1,0,0,0,0),
coma = c(0,1,0,  0,1,0,  0,1,0,1,0,1,0,  0,0,0,0,0,0,0),
death = c(0,0,1,     0,0,1,  0,0,0,0,0,0,0,  0,0,0,0,0,0,0),
discharge = c(0,0,0,    0,0,0,  0,0,0,0,0,0,0,  0,0,0,0,0,0,1)) %>%
print.data.frame
tibble(id = c(rep(1,3), rep(2,3), rep(3,7), rep(4, 7)),
t0 = c(0, 0, 0,
0, 0, 0,
0,0,10,10,20,20,0,
0,  5, 15,0, 0),
t1 = c(10, 10, 15,
15, 20, 20,
5,5, 15,15, 25,25, 25,
0, 10, 20, 20, 20),
risk = c("delirium", "coma", "terminal",
"delirium", "coma", "terminal",
"delirium", "coma","delirium", "coma","delirium", "coma", "terminal",
"delirium", "delirium", "delirium", "coma", "terminal"),
delirium = c(0,0,0,  1,0,0,  0,0,0,0,0,0,0,  1,1,0,0,0),
coma = c(0,1,0,  0,1,0,  0,1,0,1,0,1,0,  0,0,0,0,0),
death = c(0,0,1,     0,0,1,  0,0,0,0,0,0,0,  0,0,0,0,0),
discharge = c(0,0,0,    0,0,0,  0,0,0,0,0,0,0,  0,0,0,0,1)) %>%
print.data.frame
tibble(id = c(rep(1,3), rep(2,3), rep(3,7), rep(4, 5)),
t0 = c(0, 0, 0,
0, 0, 0,
0,0,10,10,20,20,0,
0,  5, 15,0, 0),
t1 = c(10, 10, 15,
15, 20, 20,
5,5, 15,15, 25,25, 25,
0, 10, 20, 20, 20),
risk = c("delirium", "coma", "terminal",
"delirium", "coma", "terminal",
"delirium", "coma","delirium", "coma","delirium", "coma", "terminal",
"delirium", "delirium", "delirium", "coma", "terminal"),
delirium = c(0,0,0,  1,0,0,  0,0,0,0,0,0,0,  1,1,0,0,0),
coma = c(0,1,0,  0,1,0,  0,1,0,1,0,1,0,  0,0,0,0,0),
death = c(0,0,1,     0,0,1,  0,0,0,0,0,0,0,  0,0,0,0,0),
discharge = c(0,0,0,    0,0,0,  0,0,0,0,0,0,0,  0,0,0,0,1)) %>%
print.data.frame
library(tidyverse)
knitr::opts_chunk$set(echo = F)
tibble(id = c(rep(1,2), rep(2,2), rep(3,3), rep(4, 3)),
t0 = c(10, 15, 15, 20, 5, 15, 25, 0, 10, 20),
t1 = c(15, NA, 20, NA, 10, 20, NA, 5, 15, NA),
event = c("coma", "death", "delirium", "death",
"coma", "coma", "discharge",
"delirium", "delirium", "discharge"),
delirium = c(0,0,1,0,0,0,0,1,1,0),
coma = c(1, 0, 1, 0, 1, 1, 0,0,0,0),
death = c(0, 1, 0, 1, 0, 0, 0,0,0,0),
discharge = c(0,0,0,0,0,0,1,0,0,1)) %>%
ggplot() +
geom_segment(aes(x = t0, xend = t1,
y = id,
yend = id,
color = event))+
geom_point(aes(x = t0,
y = id,
color = event)) +
geom_text(aes(x = t0, y = id - .1, color = event, label = event))+
theme_bw() +
theme(legend.position = "none") +
scale_y_continuous("Patient ID",breaks = 1:4)+
scale_x_continuous("Days since Randomization", limits = c(0, 25))
1014/1250
library(delirium)
library(delirium)
library(frailtypack); library(tidyverse); library(delirium)
data0 <-
simulate.competing.data(n = 500, truncate = 2,
par0 = c(betaR = 1, etaR = .3,
betaD = 1, etaD = 1, betaD2 = 1, etaD2 = 1,
theta = 1, alpha1 = 0, alpha2 = 0,
trtR = 0, trtD = 0, trtD2 = 0))
data0
# Competing Joint Model
mod.joint.a <- competing.weibull.gap.model(data = data0, covar.names = "trt",GH = 30)
dir.create("../delirium_package_simulations/2021_June")
save(mod.joint.a, file = "../delirium_package_simulations/2021_June/JointModelsA.rdata")
mod.joint.a
estimates.a <- mod.joint.a$estimates
# Classic Joint
mod.joint.b<-weibull.gap.model.optim(data = data0, covar.names = "trt",GH = 30)
save(mod.joint.a, mod.joint.b, file = "JointModels.rdata")
# competing.marg.likelihood.weibull.gap(phi = mod.joint.a$estimates, data0, "trt", GH = 30)
# 3073.5
estimates.a <- mod.joint.a$estimates
estimates.b <- mod.joint.b$estimates*0
estimates.b[names(mod.joint.b$estimates)] <- mod.joint.b$estimates
marg.likelihood.weibull.gap(phi = estimates.c, data0, "trt", GH = 30)
marg.likelihood.weibull.gap(phi = estimates.b, data0, "trt", GH = 30)
estimates.b
estimates.a
estimates.a <- mod.joint.a$estimates
estimates.b <- mod.joint.b$estimates*0
estimates.b[names(mod.joint.b$estimates)] <- mod.joint.b$estimates
estimates.a
estimates.b
# Classic Joint in Frailtypack
mod.joint.fp <-
frailtyPenal(formula = Surv(g, event) ~ trt + cluster(id) +
terminal(terminal1),
formula.terminalEvent = ~trt,
data = data0,
recurrentAG=FALSE,
hazard = "Weibull",
maxit = 100,
RandDist = "LogN", nb.gh = 32)
classic.coef <- mod.joint.a[[1]]*0
classic.coef[extract.fp.coef(mod.joint.c.fp)[[1]]] <- extract.fp.coef(mod.joint.c.fp)[[2]]
classic.coef[extract.fp.coef(mod.joint.fp)[[1]]] <- extract.fp.coef(mod.joint.fp)[[2]]
classic.coef <- mod.joint.a[[1]]*0
classic.coef[extract.fp.coef(mod.joint.fp)[[1]]] <- extract.fp.coef(mod.joint.fp)[[2]]
classic.coef[1:7] <- log(classic.coef[1:7])
marg.likelihood.weibull.gap(phi = classic.coef, data0, "trt", GH = 32)
# Compare Estimates Directly
data.frame(FP.coef = classic.coef, my.coef = estimates.c, my.competing.coef = estimates.a)
# Compare Estimates Directly
data.frame(FP.coef = classic.coef, my.coef = estimates.b, my.competing.coef = estimates.a)
classic.coef
estimates.b
estimates.a
estimates.b <- mod.joint.a$estimates*0
estimates.b[names(mod.joint.b$estimates)] <- mod.joint.b$estimates
# Compare Estimates Directly
data.frame(FP.coef = classic.coef, my.coef = estimates.b, my.competing.coef = estimates.a)
library(frailtypack); library(gt); library(tidyverse)
if(!file.exists("../reduce_analysis/REDUCE_Weibull_Models.rdata")){
load(file = "../reduce_analysis/processed_data.rdata")
#############################
# GAP Time Models
model0a <-
frailtyPenal(data = df2,
formula = Surv(tstart, tstop, delirium) ~ treatment +
terminal(death) + cluster(id),
formula.terminalEvent = ~ treatment ,
recurrentAG = T, hazard = "Weibull",RandDist = "LogN")
model0b <-
frailtyPenal(data = df2,
formula = Surv(tstart, tstop, delirium) ~ treatment +
terminal(discharge) + cluster(id),
formula.terminalEvent = ~ treatment ,
recurrentAG = FALSE,hazard = "Weibull",RandDist = "LogN")
model0c <-
multivPenal(formula = Surv(tstart, tstop, delirium) ~ treatment +
terminal(death) + terminal2(discharge) + cluster(id),
formula.terminalEvent = ~treatment,
formula.terminalEvent2= ~treatment,
data = df2,
gapTimes = F,
jointGeneral = F,
hazard = "Weibull",
maxit = 2,
save.progress = T,
initialize = F,
init.hazard = c(0.85,25,1.5,60,1,13.5),
init.Theta = 4,
init.Alpha1 = -0.27,
init.Alpha2 = -0.53,
init.B = c(0,0,0))
model0d <-
multivPenal(formula = Surv(tstart, tstop, delirium) ~ treatment +
terminal(death) + terminal2(discharge) + cluster(id),
formula.terminalEvent = ~treatment,
formula.terminalEvent2= ~treatment,
data = df2,
recurrentAG=FALSE,
jointGeneral = T,
hazard = "Weibull",
maxit = 100,
initialize = F,
init.hazard = c(0.85,25,1.5,60,1,13.5),
init.Theta = c(4.75, 4,0.1),
init.Alpha1 = -0.27,
init.Alpha2 = -0.53,
init.B = c(0,0,0))
#############################
# Calendar Time Models
model1a <-
frailtyPenal(data = df2,
formula = Surv(tstart, tstop, delirium) ~ treatment +
terminal(death) + cluster(id),
formula.terminalEvent = ~treatment,
recurrentAG = T,hazard = "Weibull",RandDist = "LogN")
model1b <-
frailtyPenal(data = df2,
formula = Surv(tstart, tstop, delirium) ~ treatment +
terminal(discharge) + cluster(id),
formula.terminalEvent = ~treatment,
recurrentAG = T,hazard = "Weibull",RandDist = "LogN")
model1c <-
multivPenal(formula = Surv(tstart, tstop, delirium) ~ arm3 +
terminal(death) + terminal2(discharge) + cluster(id),
formula.terminalEvent = ~arm3,
formula.terminalEvent2= ~ arm3,
data = df2,
recurrentAG=T,
hazard = "Weibull",
maxit = 100, initialize = F,
init.hazard = c(1.4,13,1.8,26,1.13,8.4),
init.Theta = 4.9,
init.Alpha1 = -0.07,
init.Alpha2 = -0.31,
init.B = c(-0.57,0.03,0.2))
model1d <-
multivPenal(formula = Surv(tstart, tstop, delirium) ~  arm3 +
terminal(death) + terminal2(discharge) + cluster(id),
formula.terminalEvent = ~ arm3,
formula.terminalEvent2= ~ arm3,
data = df2,
recurrentAG=T,
jointGeneral = T,
hazard = "Weibull",
maxit = 100,
initialize = F,
init.hazard = c(0.83,22.1,1.85,24,1.13,8.4),
init.Theta = c(5.12, 4.6,0.1),
init.Alpha1 = -0.09,
init.Alpha2 = -0.31)
save(model0a, model0b, model0c, model0d, model1a, model1b, model1c, model1d,
file = "../reduce_analysis/REDUCE_Weibull_Models.rdata")
}else load("../reduce_analysis/REDUCE_Weibull_Models.rdata")
load(file = "../reduce_analysis/processed_data.rdata")
#############################
# GAP Time Models
model0a <-
frailtyPenal(data = df2,
formula = Surv(tstart, tstop, delirium) ~ treatment +
terminal(death) + cluster(id),
formula.terminalEvent = ~ treatment ,
recurrentAG = T, hazard = "Weibull",RandDist = "LogN")
model0a
truth = tibble(values = c(betaR = 0.85, etaR = 25,
betaD = 1.5, etaD = 60,
betaD2 = 1, etaD2 = 13.5,
theta = 4,
alpha1 = -0.27, alpha2 = -0.53,
trtR = 0, trtD = 0, trtD2 = 0),
names = c("betaR", "etaR",
"betaD", "etaD",
"betaD2", "etaD2",
"theta",
"alpha1", "alpha2",
"trtR", "trtD", "trtD2"))
# Competing Joint Model
mod.joint.a <- competing.weibull.gap.model(data = data0, covar.names = "trt",GH = 30)
# Classic Joint
mod.joint.b <- weibull.gap.model.optim(data = data0, covar.names = "trt",GH = 30)
# Classic Joint in Frailtypack
mod.joint.fp <-
frailtyPenal(formula = Surv(g, event) ~ trt + cluster(id) +
terminal(terminal1),
formula.terminalEvent = ~trt,
data = data0,
recurrentAG=FALSE,
hazard = "Weibull",
maxit = 100,
RandDist = "LogN", nb.gh = 32)
mod.joint.fp.a <-
frailtyPenal(formula = Surv(g, event) ~ trt + cluster(id) +
terminal(terminal2),
formula.terminalEvent = ~trt,
data = data0,
recurrentAG=FALSE,
hazard = "Weibull",
maxit = 100,
RandDist = "LogN", nb.gh = 32)
mod.joint.fp.b <-
frailtyPenal(formula = Surv(g, event) ~ trt + cluster(id) +
terminal(terminal2),
formula.terminalEvent = ~trt,
data = data0,
recurrentAG=FALSE,
hazard = "Weibull",
maxit = 100,
RandDist = "LogN", nb.gh = 32)
# Classic Joint in Frailtypack
mod.joint.fp.a <-
frailtyPenal(formula = Surv(g, event) ~ trt + cluster(id) +
terminal(terminal1),
formula.terminalEvent = ~trt,
data = data0,
recurrentAG=FALSE,
hazard = "Weibull",
maxit = 100,
RandDist = "LogN", nb.gh = 32)
save(mod.joint.a, mod.joint.b, mod.joint.fp.a, mod.joint.fp.b, file = "JointModels.rdata")
# Extract Coefficients
estimates.a <- mod.joint.a$estimates
estimates.b <- mod.joint.a$estimates*0
estimates.b[names(mod.joint.b$estimates)] <- mod.joint.b$estimates
classic.coef <- mod.joint.a[[1]]*0
classic.coef[extract.fp.coef(mod.joint.fp.a)[[1]]] <- extract.fp.coef(mod.joint.fp.a)[[2]]
classic.coef[extract.fp.coef(mod.joint.fp.a)[[1]]] <- extract.fp.coef(mod.joint.fp.a)[[2]]
classic.coef <- mod.joint.a[[1]]*0
classic.coef[extract.fp.coef(mod.joint.fp.a)[[1]]] <- extract.fp.coef(mod.joint.fp.a)[[2]]
# Compare Estimates Directly
data.frame(FP.coef = classic.coef, my.coef = estimates.b, my.competing.coef = estimates.a)
estimates.b[1:7] <- exp(estimates.b[1:7])
estimates.a[1:7] <- exp(estimates.a[1:7])
# Compare Estimates Directly
data.frame(FP.coef = classic.coef, my.coef = estimates.b, my.competing.coef = estimates.a)
