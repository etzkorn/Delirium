df2 %>% group_by(id) %>% summarise(apache = apache[1], age = age[1]) %>%
summarise(length(unique(id)),
mean(apache), mean(age),
sd(apache), sd(age),
cor(age, apache),
quantile(age,0.25),
quantile(age,0.5),
quantile(age,0.75),
mean(age<50), mean(age<60),mean(age<70), mean(age<80),
min(age), max(age))
#############################
# GAP Time Models (with/without initialization)
gap.model <-
multivPenal(formula = Surv(tstart, tstop, del) ~ treatment +
terminal(death) + terminal2(discharge) + cluster(id),
formula.terminalEvent = ~treatment,
formula.terminalEvent2= ~treatment,
data = df2,
gapTimes = T,
jointGeneral = F,
hazard = "Weibull",
maxit = 300,
initialize = T)
library(frailtypack)
library(frailtypack); library(gt); library(tidyverse)
knitr::opts_chunk$set(echo = FALSE,message = FALSE)
load(file = "../reduce_data/processed_data_coma_delirium_2mgonly.rdata")
df2 <- df2 %>% ungroup %>%
filter(study_arm!=3 & (apache > 0) & !is.na(apache))%>%
mutate(gap = tstop - tstart,
id = dense_rank(id),
treatment = 1*(study_arm==2),
age60 = 1*(age<60),
age70 = 1*(age<70),
age80 = 1*(age<80))
#table(df2$apache, useNA = "ifany")
#table(df2$age, useNA = "ifany")
table(df2$treatment, useNA = "ifany")
df2 %>% group_by(id) %>% summarise(apache = apache[1], age = age[1]) %>%
summarise(length(unique(id)),
mean(apache), mean(age),
sd(apache), sd(age),
cor(age, apache),
quantile(age,0.25),
quantile(age,0.5),
quantile(age,0.75),
mean(age<50), mean(age<60),mean(age<70), mean(age<80),
min(age), max(age))
#############################
# GAP Time Models (with/without initialization)
gap.model <-
multivPenal(formula = Surv(tstart, tstop, del) ~ treatment +
terminal(death) + terminal2(discharge) + cluster(id),
formula.terminalEvent = ~treatment,
formula.terminalEvent2= ~treatment,
data = df2,
gapTimes = T,
jointGeneral = F,
hazard = "Weibull",
maxit = 300,
initialize = T)
library(frailtypack)
library(frailtypack); library(gt); library(tidyverse)
knitr::opts_chunk$set(echo = FALSE,message = FALSE)
load(file = "../reduce_data/processed_data_coma_delirium_2mgonly.rdata")
df2 <- df2 %>% ungroup %>%
filter(study_arm!=3 & (apache > 0) & !is.na(apache))%>%
mutate(gap = tstop - tstart,
id = dense_rank(id),
treatment = 1*(study_arm==2),
age60 = 1*(age<60),
age70 = 1*(age<70),
age80 = 1*(age<80))
#table(df2$apache, useNA = "ifany")
#table(df2$age, useNA = "ifany")
table(df2$treatment, useNA = "ifany")
df2 %>% group_by(id) %>% summarise(apache = apache[1], age = age[1]) %>%
summarise(length(unique(id)),
mean(apache), mean(age),
sd(apache), sd(age),
cor(age, apache),
quantile(age,0.25),
quantile(age,0.5),
quantile(age,0.75),
mean(age<50), mean(age<60),mean(age<70), mean(age<80),
min(age), max(age))
#############################
# GAP Time Models (with/without initialization)
gap.model <-
multivPenal(formula = Surv(tstart, tstop, del) ~ treatment +
terminal(death) + terminal2(discharge) + cluster(id),
formula.terminalEvent = ~treatment,
formula.terminalEvent2= ~treatment,
data = df2,
gapTimes = T,
jointGeneral = F,
hazard = "Weibull",
maxit = 300,
initialize = T)
gap.model$summary.table
library(frailtypack)
devtools::document()
summary(sample.accel)
library(postuR)
data("sample.accel")
summary(sample.accel)
df <-
postuR:::rotate.data(sample.accel, from = c(0.17392, 0.3844, 0.2012), to = c(0,0,1))
df <-
select(sample.accel, x:z) %>%
postuR:::rotate.data(from = c(0.17392, 0.3844, 0.2012), to = c(0,0,1))
library(tidyverse)
df <-
select(sample.accel, x:z) %>%
postuR:::rotate.data(from = c(0.17392, 0.3844, 0.2012), to = c(0,0,1))
head(df)
plot(data = df[1:(1440*60*1.57),], y~x)
with(df[1:(1440*60*1.57),], plot(y~x))
df <-
select(sample.accel, x:z) %>%
postuR:::rotate.data(from = c(0.17392, 0.3844, 0.2012), to = c(0,0,1))
head(df)
with(df[1:(1440*60*1.57),], plot(ry~rx))
df <-
select(sample.accel[1:(1440*60*1.57),], x:z) %>%
postuR:::rotate.data(from = c(0.17392, 0.3844, 0.2012), to = c(0,0,1))
summary(sample.accel[1:(1440*60*1.57),])
df <-
select(sample.accel[1:(1440*60*1.57),], x:z) %>%
postuR:::rotate.data(from = c(0.4124, 0.6288, 0.32986), to = c(0,0,1))
with(df[1:(1440*60*1.57),], plot(ry~rx))
with(df, plot(ry~rx))
cov(x, y)
with(df, cov(ry,rx))
x <- rnorm(100)
cov(x,x)
var(x)
x <- (1:100) + rnorm(100)
y <- (1:100) + rnorm(100)
cov(x,y)
var(x)
var(y)
x <- (1:100)/10 + rnorm(100)
y <- (1:100)/10 + rnorm(100)
cov(x,y)
var(x)
var(y)
x <- x/sd(x)
y <- y/sd(y)
cov(x,y)
var(x)
var(y)
lm(y~x)
lm(x~y)
x <- (1:100)/10 + rnorm(100)
y <- (1:100)/10 + rnorm(100)
x <- (x - mean(x))/sd(x)
y <- (y- mean(y))/sd(y)
cov(x,y)
var(x)
var(y)
lm(y~x)
lm(x~y)
cov(x,y)
cor(x,y)
with(df, cov(ry,rx))
with(df, cor(ry,rx))
sd(df$rx)
sd(df$ry)
pc <- prcomp(df[c("rx","ry"),],
center = TRUE,
scale. = F)
summary(df)
pc <- prcomp(df[,c("rx","ry")],
center = TRUE,
scale. = F)
pc
names(pc)
names(pc)$rotateion
names(pc)$rotation
(pc)$rotation
with(df, plot(df[,c("rx","ry")] %*% pc$rotation))
df[,c("rx","ry")] %*% pc$rotation
df[,c("rx","ry")]
pc$rotation
df[,c("rx","ry")] %*% pc$rotation
with(df, plot(df[,c("rx","ry")] %*% (pc$rotation)))
with(df, plot((df[,c("rx","ry")]) %*% (pc$rotation)))
with(df, plot(as.matrix(df[,c("rx","ry")]) %*% (pc$rotation)))
df <-
select(sample.accel[1:(1440*60*1.57),], x:z) %>%
postuR:::rotate.data(from = c(0.4124, 0.6288, 0.32986), to = c(0,0,1)) %>%
sample_n(3000)
head(df)
with(df, plot(ry~rx))
with(df, cor(ry,rx))
with(df, cor(ry,rx))
sd(df$rx)
sd(df$ry)
summary(df)
pc <- prcomp(df[,c("rx","ry")],
center = TRUE,
scale. = F)
with(df, plot(as.matrix(df[,c("rx","ry")]) %*% (pc$rotation)))
with(df, points(as.matrix(df[,c("rx","ry")]) %*% (pc$rotation), col = "red"))
with(df, plot(as.matrix(df[,c("rx","ry")]) %*% (pc$rotation)))
with(df, points(as.matrix(df[,c("rx","ry")]) %*% (pc$rotation), col = "red"))
with(df, plot(as.matrix(df[,c("rx","ry")])))
with(df, points(as.matrix(df[,c("rx","ry")]) %*% (pc$rotation), col = "red"))
mean(df$rx)
mean(df$ry)
pc <- prcomp(df[,c("rx","ry")],
center = F,
scale. = F)
with(df, plot(as.matrix(df[,c("rx","ry")])))
with(df, points(as.matrix(df[,c("rx","ry")]) %*% (pc$rotation), col = "red"))
with(df, points((pc$rotation) %*% as.matrix(df[,c("rx","ry")]) , col = "red"))
pc$rotation
with(df, points((pc$rotation) %*% t(as.matrix(df[,c("rx","ry")])) , col = "red"))
with(df, plot(as.matrix(df[,c("rx","ry")])))
with(df, points(as.matrix(df[,c("rx","ry")]) %*% (pc$rotation), col = "red"))
with(df, points((pc$rotation) %*% t(as.matrix(df[,c("rx","ry")])) , col = "blue"))
with(df, points(df[,c("rx","ry")]) %*% t(pc$rotation) , col = "blue"))
with(df, plot(as.matrix(df[,c("rx","ry")])))
with(df, points(as.matrix(df[,c("rx","ry")]) %*% (pc$rotation), col = "red"))
with(df, points(as.matrix(df[,c("rx","ry")]) %*% t(pc$rotation) , col = "blue"))
lines( sin(seq(0, 2*pi, length = 100)),cos(seq(0, 2*pi, length = 100)))
with(df, plot(as.matrix(df[,c("rx","ry")]), xlim = c(-1.1, 1.1), ylim = c(-1.1, 1.1)))
lines( sin(seq(0, 2*pi, length = 100)),cos(seq(0, 2*pi, length = 100)))
with(df, points(as.matrix(df[,c("rx","ry")]) %*% (pc$rotation), col = "red"))
with(df, points(as.matrix(df[,c("rx","ry")]) %*% t(pc$rotation) , col = "blue"))
summary(as.matrix(df[,c("rx","ry")]) %*% (pc$rotation))
summary(as.matrix(df[,c("rx","ry")]) %*% t(pc$rotation))
var(as.matrix(df[,c("rx","ry")]) %*% (pc$rotation))
var(as.matrix(df[,c("rx","ry")]) %*% t(pc$rotation))
mean(df$rx)
mean(df$ry)
df <-
select(sample.accel[1:(1440*60*1.57),], x:z) %>%
postuR:::rotate.data(from = c(0.4124, 0.6288, 0.32986), to = c(0,0,1))
mean(df$rx)
mean(df$ry)
library(postuR)
library(tidyverse)
data("sample.accel")
summary(sample.accel[1:(1440*60*1.57),])
df <-
select(sample.accel[1:(1440*60*1.57),], x:z) %>%
postuR:::rotate.data(from = c(0.4124, 0.6288, 0.32986), to = c(0,0,1))
mean(df$rx)
mean(df$ry)
select(sample.accel[1:(1440*60*1.57),], x:z) %>% summary
head(df)
with(df, plot(ry~rx))
with(df, cor(ry,rx))
with(df, cor(ry,rx))
sd(df$rx)
sd(df$ry)
mean(df$rx)
mean(df$ry)
summary(df)
select(sample.accel[1:(1440*60*1.57),], x:z) %>%
mutate(r = sqrt(x^2 + y^2 + z^2),
x = x/r, y = y/r, z = z/r) %>%
summary
df <-
select(sample.accel[1:(1440*60*1.57),], x:z) %>%
mutate(r = sqrt(x^2 + y^2 + z^2),
x = x/r, y = y/r, z = z/r) %>%
postuR:::rotate.data(from = c(0.3963, 0.6064, 0.31876), to = c(0,0,1))
df <-
select(sample.accel[1:(1440*60*1.57),], x:z) %>%
mutate(r = sqrt(x^2 + y^2 + z^2),
x = x/r, y = y/r, z = z/r) %>%
select(-r) %>%
postuR:::rotate.data(from = c(0.3963, 0.6064, 0.31876), to = c(0,0,1))
head(df)
summary(df)
library(postuR)
library(tidyverse)
data("sample.accel")
summary(sample.accel[1:(1440*60*1.57),])
# Mean   : 0.4124   Mean   : 0.6288   Mean   : 0.32986
df <-
select(sample.accel[1:(1440*60*1.57),], x:z) %>%
mutate(r = sqrt(x^2 + y^2 + z^2),
x = x/r, y = y/r, z = z/r) %>%
select(-r) %>%
postuR:::rotate.data(from = c(0.3963, 0.6064, 0.31876), to = c(0,0,1))
summary(df)
select(sample.accel[1:(1440*60*1.57),], x:z) %>%
mutate(r = sqrt(x^2 + y^2 + z^2),
x = x/r, y = y/r, z = z/r) %>%
summary
df <-
select(sample.accel[1:(1440*60*1.57),], x:z) %>%
mutate(r = sqrt(x^2 + y^2 + z^2),
x = x/r, y = y/r, z = z/r) %>%
select(-r) %>%
postuR:::rotate.data(from = c(0.3963, 0.6064, 0.31876), to = c(0,0,1))
df
summary(df)
sqrt(sum(c(0.3963, 0.6064, 0.31876)^2))
df <-
select(sample.accel[1:(1440*60*1.57),], x:z) %>%
mutate(r = sqrt(x^2 + y^2 + z^2),
x = x/r, y = y/r, z = z/r) %>%
select(-r) %>%
postuR:::rotate.data(from = c(0.3963, 0.6064, 0.31876)/sqrt(sum(c(0.3963, 0.6064, 0.31876)^2)), to = c(0,0,1))
summary(df)
with(df, plot(ry~rx))
with(df, cor(ry,rx))
with(df, cor(ry,rx))
sd(df$rx)
sd(df$ry)
mean(df$rx)
mean(df$ry)
summary(df)
pc <- prcomp(df[,c("rx","ry")],
center = F,
scale. = F)
with(df, plot(as.matrix(df[,c("rx","ry")]), xlim = c(-1.1, 1.1), ylim = c(-1.1, 1.1)))
lines( sin(seq(0, 2*pi, length = 100)),cos(seq(0, 2*pi, length = 100)))
with(df, points(as.matrix(df[,c("rx","ry")]) %*% (pc$rotation), col = "red"))
var(as.matrix(df[,c("rx","ry")]) %*% (pc$rotation))
var(as.matrix(df[,c("rx","ry")]) %*% t(pc$rotation))
var(as.matrix(df[,c("rx","ry")]) %*% (pc$rotation)) %>% diag
var(as.matrix(df[,c("rx","ry")]) %*% t(pc$rotation)) %>% diag
postuR::
calculate.removal.time
postuR::calculate.removal.time
library(frailtypack)
library(frailtypack); library(gt); library(tidyverse)
knitr::opts_chunk$set(echo = FALSE,message = FALSE)
load(file = "../reduce_data/processed_data_coma_delirium_2mgonly.rdata")
df2 <- df2 %>% ungroup %>%
filter(study_arm!=3 & (apache > 0) & !is.na(apache))%>%
mutate(gap = tstop - tstart,
id = dense_rank(id),
treatment = 1*(study_arm==2),
age60 = 1*(age<60),
age70 = 1*(age<70),
age80 = 1*(age<80))
#table(df2$apache, useNA = "ifany")
#table(df2$age, useNA = "ifany")
table(df2$treatment, useNA = "ifany")
df2 %>% group_by(id) %>% summarise(apache = apache[1], age = age[1]) %>%
summarise(length(unique(id)),
mean(apache), mean(age),
sd(apache), sd(age),
cor(age, apache),
quantile(age,0.25),
quantile(age,0.5),
quantile(age,0.75),
mean(age<50), mean(age<60),mean(age<70), mean(age<80),
min(age), max(age))
if(!file.exists("../reduce_analysis_output/REDUCE_Weibull_Models_20220501.rdata")){
# the death initialization model for the gap.model doesn't work, so we set some starting vals
gap.model1 <-
frailtyPenal(formula = Surv(gap, del) ~ treatment+
terminal(death) + cluster(id),
formula.terminalEvent = ~treatment,
data = df2,
recurrentAG = F,
hazard = "Weibull", RandDist = "LogN",
init.Alpha = 14,
init.B = c(-0.0182,-0.0504),
init.Theta = 0.238^2,
maxit = 300)
#############################
# GAP Time Models (with/without initialization)
gap.model <-
multivPenal(formula = Surv(tstart, tstop, del) ~ treatment +
terminal(death) + terminal2(discharge) + cluster(id),
formula.terminalEvent = ~treatment,
formula.terminalEvent2= ~treatment,
data = df2,
gapTimes = T,
jointGeneral = F,
hazard = "Weibull",
maxit = 300,
initialize = T)
# Extract Transformed Parameters
gap.model$initialization$joint1 <- gap.model1
f1 <- function(b){
c(b[1:(length(b)-3+1-2)]^2,
b[(length(b)-3+1-1):length(b)])
}
f1.prime <- function(b){
diag(c(2*b[1:(length(b)-3+1-2)],
rep(1,3-1+2)))
}
Parameters1 = c("Recurrent: Shape", "Recurrent: Scale",
"Terminal1: Shape", "Terminal1: Scale",
"Sigma", "Terminal1: Alpha",
paste0("Recurrent: ","treatment"),
paste0("Terminal1: ","treatment"))
gap.model$initialization$varH.Estimate1 <-
f1.prime(gap.model$initialization$joint1$b) %*%
gap.model$initialization$joint1$varHtotal %*%
f1.prime(gap.model$initialization$joint1$b)
gap.model$initialization$summary.table1 <- tibble(
Parameter = Parameters1,
Raw = gap.model$initialization$joint1$b,
Raw.SE = sqrt(diag(gap.model$initialization$joint1$varHtotal)),
Estimate = f1(gap.model$initialization$joint1$b),
Estimate.SE = sqrt(diag(gap.model$initialization$varH.Estimate1)),
p = 2*pnorm(q = -abs(Raw), mean = 0, sd = Raw.SE)
)
#############################
# Calendar Time Model
cal.model <-
multivPenal(formula = Surv(tstart, tstop, del) ~ treatment +
terminal(death) + terminal2(discharge) + cluster(id),
formula.terminalEvent = ~treatment,
formula.terminalEvent2= ~treatment,
data = df2,
jointGeneral = F,
hazard = "Weibull",
maxit = 300,
initialize = T)
save(gap.model, cal.model,
file = "../reduce_analysis_output/REDUCE_Weibull_Models_20220501.rdata")
}else load("../reduce_analysis_output/REDUCE_Weibull_Models_20220501.rdata")
m1 <-dplyr::select(cal.model$summary.table, Parameter, Estimate, Estimate.SE, p)
m2 <-dplyr::select(cal.model$initialization$summary.table1, Parameter, Estimate, Estimate.SE, p)
m3 <-dplyr::select(cal.model$initialization$summary.table2, Parameter, Estimate, Estimate.SE, p)
m4 <-dplyr::select(gap.model$summary.table, Parameter, Estimate, Estimate.SE, p)
m5 <-dplyr::select(gap.model$initialization$summary.table1, Parameter, Estimate, Estimate.SE, p)
m6 <-dplyr::select(gap.model$initialization$summary.table2, Parameter, Estimate, Estimate.SE, p)
tab.start <-
left_join(m4, m5, by = "Parameter") %>%
left_join(m6, by = "Parameter")
colnames(tab.start)<- c(" ",paste(rep(c("Fit", "(SE)", "p"),3),rep(1:3, each = 3)))
gt(tab.start , rowname_col = "Parameter")%>%
tab_stubhead(label = "Parameter")%>%
tab_header(
title = md("**REDUCE Trial: Weibull Model Estimates**"))%>%
fmt_missing(columns = 1:10, missing_text = "")  %>%
text_transform(
locations = cells_body(columns = c(3,6,9)),
fn = function(x) ifelse(x == "","",paste0("(",x,")"))
) %>%
fmt_number(columns = c(2,3,5,6,8,9),decimals = 3)%>%
fmt_number(columns = c(4,7,10),decimals = 3) %>%
as_latex() %>%as.character() %>%cat()
gap.model1 <-
frailtyPenal(formula = Surv(tstart, tstop, del) ~ treatment+
terminal(death) + cluster(id),
formula.terminalEvent = ~treatment,
data = df2,
recurrentAG = T,
hazard = "Splines", #RandDist = "LogN",
n.knots = 20, kappa = c(10000,10000),
init.Alpha = 1,
init.B = c(-0.0182,-0.0504),
init.Theta = 0.25,
maxit = 300)
if(!file.exists("../reduce_analysis_output/REDUCE_Weibull_Models_Covariates_20220218.rdata")){
# the death initialization model for the gap.model doesn't work, so we set some starting vals
gap.model1 <-
frailtyPenal(formula = Surv(gap, del) ~ treatment + I(apache/5 - 19/5) + I(age/10 - 65/10) +
terminal(death) + cluster(id),
formula.terminalEvent = ~treatment + I(apache/5 - 19/5) + I(age/10 - 65/10),
data = df2,
recurrentAG = F,
hazard = "Weibull", RandDist = "LogN",
init.Alpha = 14,
init.B = c(-0.0216,0.0636,0.0283,-0.0519,0.0807,0.236),
init.Theta = 0.238^2,
maxit = 300)
gap.model1 <-
frailtyPenal(formula = Surv(gap, del) ~ treatment + I(apache/5 - 19/5) + I(age/10 - 65/10) +
terminal(discharge) + cluster(id),
formula.terminalEvent = ~treatment + I(apache/5 - 19/5) + I(age/10 - 65/10),
data = df2,
recurrentAG = F,
hazard = "Weibull", RandDist = "LogN",
init.Alpha = 14,
init.B = c(-0.0216,0.0636,0.0283,-0.0519,0.0807,0.236),
init.Theta = 0.238^2,
maxit = 300)
#############################
# GAP Time Models (with/without initialization)
gap.model <-
multivPenal(formula = Surv(tstart, tstop, del) ~ treatment + I(apache/5 - 19/5) + I(age/10 - 65/10)+
terminal(death) + terminal2(discharge) + cluster(id),
formula.terminalEvent = ~treatment+ I(apache/5- 19/5)+ I(age/10 - 65/10),
formula.terminalEvent2= ~treatment+ I(apache/5- 19/5)+ I(age/10 - 65/10),
data = df2,
gapTimes = T,
jointGeneral = F,
hazard = "Weibull",
maxit = 300,
initialize = F,
init.Sigma = 0.25,
init.Alpha1 = 14,
init.Alpha2 = -5,
init.hazard = c(0.34, 6.64, 2.6, 78.5, 1.51, 8.23),
init.B = rep(0,9))
}else load("../reduce_analysis_output/REDUCE_Weibull_Models_Covariates_20220214.rdata")
gap.model$summary.table %>%
dplyr::select(Parameter, Estimate, Estimate.SE, p) %>%
knitr::kable(format = "latex")
load("~/Documents/Research/Delirium/reduce_analysis_output/REDUCE_Weibull_Models_20220201.rdata")
load("~/Documents/Research/Delirium/reduce_analysis_output/REDUCE_Weibull_Models_20220201.rdata")
gap.model$summary.table
gap.model2 <- gap.model
load("~/Documents/Research/Delirium/reduce_analysis_output/REDUCE_Weibull_Models_20220501.rdata")
gap.model
gap.model$summary.table
gap.model2$summary.table
