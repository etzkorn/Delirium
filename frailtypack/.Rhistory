ymax = bias.death+2*SD.death/sqrt(n.death),
color = factor(alpha2),
group = factor(alpha2)))+
scale_x_continuous(breaks = c(-0.25, 0, 0.25))+
theme_bw(20)+
theme(legend.position = c(0.35,0.25),
legend.background = element_rect(color = "grey80"))+
ylim(-0.2, 0.5)+
scale_color_discrete(expression(alpha[2]))+
xlab(expression(beta[2]))+
ylab(expression(Bias~alpha[1]))+
ggtitle("Joint Death"),
nrow=1)
dev.off()
#############################################################################
# Plot Alpha1 Bias confidence intervals
png("../simulation_results/NineScenario_Bias_Alpha.png",
width = 1200, height = 600)
gridExtra::grid.arrange(
sumtab %>% filter(Parameter == "Alpha, Terminal1") %>%
ggplot() +
geom_hline(aes(yintercept = 0), linetype = 2)+
geom_point(aes(x = trtD2+alpha2/20, y = bias, color = factor(alpha2))) +
#geom_line(aes(x = trtD2+alpha2/20,, y = bias, color = factor(alpha2), group = factor(alpha2))) +
geom_errorbar(aes(x = trtD2+alpha2/20,
ymin = bias-2*SD/sqrt(n),
ymax = bias+2*SD/sqrt(n),
color = factor(alpha2),
group = factor(alpha2)))+
scale_x_continuous(breaks = c(-0.25, 0, 0.25))+
theme_bw(20)+
theme(legend.position = "none")+
ylim(-0.2, 0.6)+
scale_color_discrete(expression(alpha[2]))+
xlab(expression(beta[2]))+
ylab(expression(Bias~alpha[1]))+
ggtitle("Competing Death and Discharge"),
sumtab %>% filter(Parameter == "Alpha, Terminal1") %>%
ggplot() +
geom_hline(aes(yintercept = 0), linetype = 2)+
geom_point(aes(x = trtD2+alpha2/20, y = bias.death, color = factor(alpha2))) +
#geom_line(aes(x = trtD2+alpha2/20,, y = bias.death, color = factor(alpha2), group = factor(alpha2))) +
geom_errorbar(aes(x = trtD2+alpha2/20,
ymin = bias.death-2*SD.death/sqrt(n.death),
ymax = bias.death+2*SD.death/sqrt(n.death),
color = factor(alpha2),
group = factor(alpha2)))+
scale_x_continuous(breaks = c(-0.25, 0, 0.25))+
theme_bw(20)+
theme(legend.position = c(0.35,0.25),
legend.background = element_rect(color = "grey80"))+
ylim(-0.2, 0.6)+
scale_color_discrete(expression(alpha[2]))+
xlab(expression(beta[2]))+
ylab(expression(Bias~alpha[1]))+
ggtitle("Joint Death"),
nrow=1)
dev.off()
#############################################################################
# Plot Death Treatment Effect Bias with Bias confidence intervals
png("../simulation_results/NineScenario_Bias_TrtD.png",
width = 1200, height = 600)
gridExtra::grid.arrange(
sumtab %>% filter(Parameter == "Terminal1: trt") %>%
ggplot() +
geom_hline(aes(yintercept = 0), linetype = 2)+
geom_point(aes(x = trtD2+alpha2/20, y = bias, color = factor(alpha2))) +
#geom_line(aes(x = trtD2+alpha2/20,, y = bias, color = factor(alpha2), group = factor(alpha2))) +
geom_errorbar(aes(x = trtD2+alpha2/20,
ymin = bias-2*SD/sqrt(n),
ymax = bias+2*SD/sqrt(n),
color = factor(alpha2),
group = factor(alpha2)))+
scale_x_continuous(breaks = c(-0.25, 0, 0.25))+
theme_bw(20)+
theme(legend.position = "none")+
ylim(-0.08, 0.04)+
scale_color_discrete(expression(alpha[2]))+
xlab(expression(beta[2]))+
ylab(expression(Bias~beta[1]))+
ggtitle("Competing Death and Discharge"),
sumtab %>% filter(Parameter == "Terminal1: trt") %>%
ggplot() +
geom_hline(aes(yintercept = 0), linetype = 2)+
geom_point(aes(x = trtD2+alpha2/20, y = bias.death, color = factor(alpha2))) +
#geom_line(aes(x = trtD2+alpha2/20,, y = bias.death, color = factor(alpha2), group = factor(alpha2))) +
geom_errorbar(aes(x = trtD2+alpha2/20,
ymin = bias.death-2*SD.death/sqrt(n.death),
ymax = bias.death+2*SD.death/sqrt(n.death),
color = factor(alpha2),
group = factor(alpha2)))+
scale_x_continuous(breaks = c(-0.25, 0, 0.25))+
theme_bw(20)+
theme(legend.position = c(0.35,0.25),
legend.background = element_rect(color = "grey80"))+
ylim(-0.08, 0.04)+
scale_color_discrete(expression(alpha[2]))+
xlab(expression(beta[2]))+
ylab(expression(Bias~beta[1]))+
ggtitle("Joint Death"),
nrow=1)
dev.off()
#############################################################################
# Plot Recurrent Event Treatment Effect Bias with Bias confidence intervals
png("../simulation_results/NineScenario_Bias_TrtR.png",
width = 1200, height = 600)
gridExtra::grid.arrange(
sumtab %>% filter(Parameter == "Recurrent: trt") %>%
ggplot() +
geom_hline(aes(yintercept = 0), linetype = 2)+
geom_point(aes(x = trtD2+alpha2/20, y = bias, color = factor(alpha2)),
size = 2) +
#geom_line(aes(x = trtD2+alpha2/20,, y = bias, color = factor(alpha2), group = factor(alpha2))) +
geom_errorbar(aes(x = trtD2+alpha2/20,
ymin = bias-2*SD/sqrt(n), ymax = bias+2*SD/sqrt(n),
color = factor(alpha2), group = factor(alpha2)),
size = 2)+
theme_bw(20)+
theme(legend.position = "none")+
ylim(-0.02, 0.02)+
scale_color_discrete(expression(alpha[2]))+
scale_x_continuous(breaks = c(-0.25, 0, 0.25))+
xlab(expression(beta[2]))+
ylab(expression(Bias~beta[r]))+
ggtitle("Competing Death and Discharge"),
sumtab %>% filter(Parameter == "Recurrent: trt") %>%
ggplot() +
geom_hline(aes(yintercept = 0), linetype = 2)+
geom_point(aes(x = trtD2+alpha2/20, y = bias.death, color = factor(alpha2))) +
#geom_line(aes(x = trtD2+alpha2/20,, y = bias.death, color = factor(alpha2), group = factor(alpha2))) +
geom_errorbar(aes(x = trtD2+alpha2/20,
ymin = bias.death-2*SD.death/sqrt(n.death),
ymax = bias.death+2*SD.death/sqrt(n.death),
color = factor(alpha2), group = factor(alpha2)))+
theme_bw(20)+
theme(legend.position = c(0.5,0.85),
legend.background = element_rect(color = "grey80"))+
ylim(-0.02, 0.02)+
scale_color_discrete(expression(alpha[2]))+
scale_x_continuous(breaks = c(-0.25, 0, 0.25))+
xlab(expression(beta[2]))+
ylab(expression(Bias~beta[r]))+
ggtitle("Joint, Death"),
nrow=1)
dev.off()
#############################################################################
# Plot Recurrent Event Treatment Effect Bias with Bias confidence intervals
png("../simulation_results/NineScenario_Bias_TrtR.png",
width = 1200, height = 600)
gridExtra::grid.arrange(
sumtab %>% filter(Parameter == "Recurrent: trt") %>%
ggplot() +
geom_hline(aes(yintercept = 0), linetype = 4)+
geom_point(aes(x = trtD2+alpha2/20, y = bias, color = factor(alpha2)),
size = 2) +
#geom_line(aes(x = trtD2+alpha2/20,, y = bias, color = factor(alpha2), group = factor(alpha2))) +
geom_errorbar(aes(x = trtD2+alpha2/20,
ymin = bias-2*SD/sqrt(n), ymax = bias+2*SD/sqrt(n),
color = factor(alpha2), group = factor(alpha2)),
size = 1)+
theme_bw(20)+
theme(legend.position = "none")+
ylim(-0.02, 0.02)+
scale_color_discrete(expression(alpha[2]))+
scale_x_continuous(breaks = c(-0.25, 0, 0.25))+
xlab(expression(beta[2]))+
ylab(expression(Bias~beta[r]))+
ggtitle("Competing Death and Discharge"),
sumtab %>% filter(Parameter == "Recurrent: trt") %>%
ggplot() +
geom_hline(aes(yintercept = 0), linetype = 2)+
geom_point(aes(x = trtD2+alpha2/20, y = bias.death, color = factor(alpha2))) +
#geom_line(aes(x = trtD2+alpha2/20,, y = bias.death, color = factor(alpha2), group = factor(alpha2))) +
geom_errorbar(aes(x = trtD2+alpha2/20,
ymin = bias.death-2*SD.death/sqrt(n.death),
ymax = bias.death+2*SD.death/sqrt(n.death),
color = factor(alpha2), group = factor(alpha2)))+
theme_bw(20)+
theme(legend.position = c(0.5,0.85),
legend.background = element_rect(color = "grey80"))+
ylim(-0.02, 0.02)+
scale_color_discrete(expression(alpha[2]))+
scale_x_continuous(breaks = c(-0.25, 0, 0.25))+
xlab(expression(beta[2]))+
ylab(expression(Bias~beta[r]))+
ggtitle("Joint, Death"),
nrow=1)
dev.off()
#############################################################################
# Plot Recurrent Event Treatment Effect Bias with Bias confidence intervals
png("../simulation_results/NineScenario_Bias_TrtR.png",
width = 1200, height = 600)
gridExtra::grid.arrange(
sumtab %>% filter(Parameter == "Recurrent: trt") %>%
ggplot() +
geom_hline(aes(yintercept = 0), linetype = 4)+
geom_point(aes(x = trtD2+alpha2/20, y = bias, color = factor(alpha2)),
size = 4) +
#geom_line(aes(x = trtD2+alpha2/20,, y = bias, color = factor(alpha2), group = factor(alpha2))) +
geom_errorbar(aes(x = trtD2+alpha2/20,
ymin = bias-2*SD/sqrt(n), ymax = bias+2*SD/sqrt(n),
color = factor(alpha2), group = factor(alpha2)),
size = 1)+
theme_bw(20)+
theme(legend.position = "none")+
ylim(-0.02, 0.02)+
scale_color_discrete(expression(alpha[2]))+
scale_x_continuous(breaks = c(-0.25, 0, 0.25))+
xlab(expression(beta[2]))+
ylab(expression(Bias~beta[r]))+
ggtitle("Competing Death and Discharge"),
sumtab %>% filter(Parameter == "Recurrent: trt") %>%
ggplot() +
geom_hline(aes(yintercept = 0), linetype = 2)+
geom_point(aes(x = trtD2+alpha2/20, y = bias.death, color = factor(alpha2))) +
#geom_line(aes(x = trtD2+alpha2/20,, y = bias.death, color = factor(alpha2), group = factor(alpha2))) +
geom_errorbar(aes(x = trtD2+alpha2/20,
ymin = bias.death-2*SD.death/sqrt(n.death),
ymax = bias.death+2*SD.death/sqrt(n.death),
color = factor(alpha2), group = factor(alpha2)))+
theme_bw(20)+
theme(legend.position = c(0.5,0.85),
legend.background = element_rect(color = "grey80"))+
ylim(-0.02, 0.02)+
scale_color_discrete(expression(alpha[2]))+
scale_x_continuous(breaks = c(-0.25, 0, 0.25))+
xlab(expression(beta[2]))+
ylab(expression(Bias~beta[r]))+
ggtitle("Joint, Death"),
nrow=1)
dev.off()
#############################################################################
# Plot Recurrent Event Treatment Effect Bias with Bias confidence intervals
png("../simulation_results/NineScenario_Bias_TrtR.png",
width = 1200, height = 600)
gridExtra::grid.arrange(
sumtab %>% filter(Parameter == "Recurrent: trt") %>%
ggplot() +
geom_hline(aes(yintercept = 0), linetype = 4)+
geom_point(aes(x = trtD2+alpha2/20, y = bias, color = factor(alpha2)),
size = 4) +
#geom_line(aes(x = trtD2+alpha2/20,, y = bias, color = factor(alpha2), group = factor(alpha2))) +
geom_errorbar(aes(x = trtD2+alpha2/20,
ymin = bias-2*SD/sqrt(n), ymax = bias+2*SD/sqrt(n),
color = factor(alpha2), group = factor(alpha2)),
size = 1)+
theme_bw(20)+
theme(legend.position = "none")+
ylim(-0.02, 0.02)+
scale_color_discrete(expression(alpha[2]))+
scale_x_continuous(breaks = c(-0.25, 0, 0.25))+
xlab(expression(beta[2]))+
ylab(expression(Bias~beta[r]))+
ggtitle("Competing Death and Discharge"),
sumtab %>% filter(Parameter == "Recurrent: trt") %>%
ggplot() +
geom_hline(aes(yintercept = 0), linetype = 2)+
geom_point(aes(x = trtD2+alpha2/20, y = bias.death, color = factor(alpha2)),
size = 4) +
#geom_line(aes(x = trtD2+alpha2/20,, y = bias.death, color = factor(alpha2), group = factor(alpha2))) +
geom_errorbar(aes(x = trtD2+alpha2/20,
ymin = bias.death-2*SD.death/sqrt(n.death),
ymax = bias.death+2*SD.death/sqrt(n.death),
color = factor(alpha2), group = factor(alpha2)),
size = 1)+
theme_bw(20)+
theme(legend.position = c(0.5,0.85),
legend.background = element_rect(color = "grey80"))+
ylim(-0.02, 0.02)+
scale_color_discrete(expression(alpha[2]))+
scale_x_continuous(breaks = c(-0.25, 0, 0.25))+
xlab(expression(beta[2]))+
ylab(expression(Bias~beta[r]))+
ggtitle("Joint, Death"),
nrow=1)
dev.off()
#############################################################################
# Plot Death Treatment Effect Bias with Bias confidence intervals
png("../simulation_results/NineScenario_Bias_TrtD.png",
width = 1200, height = 600)
gridExtra::grid.arrange(
sumtab %>% filter(Parameter == "Terminal1: trt") %>%
ggplot() +
geom_hline(aes(yintercept = 0), linetype = 2)+
geom_point(aes(x = trtD2+alpha2/20, y = bias, color = factor(alpha2)),
size = 4) +
#geom_line(aes(x = trtD2+alpha2/20,, y = bias, color = factor(alpha2), group = factor(alpha2))) +
geom_errorbar(aes(x = trtD2+alpha2/20,
ymin = bias-2*SD/sqrt(n),
ymax = bias+2*SD/sqrt(n),
color = factor(alpha2),
group = factor(alpha2)),
size = 1)+
scale_x_continuous(breaks = c(-0.25, 0, 0.25))+
theme_bw(20)+
theme(legend.position = "none")+
ylim(-0.08, 0.04)+
scale_color_discrete(expression(alpha[2]))+
xlab(expression(beta[2]))+
ylab(expression(Bias~beta[1]))+
ggtitle("Competing Death and Discharge"),
sumtab %>% filter(Parameter == "Terminal1: trt") %>%
ggplot() +
geom_hline(aes(yintercept = 0), linetype = 2)+
geom_point(aes(x = trtD2+alpha2/20, y = bias.death, color = factor(alpha2)),
size = 4) +
#geom_line(aes(x = trtD2+alpha2/20,, y = bias.death, color = factor(alpha2), group = factor(alpha2))) +
geom_errorbar(aes(x = trtD2+alpha2/20,
ymin = bias.death-2*SD.death/sqrt(n.death),
ymax = bias.death+2*SD.death/sqrt(n.death),
color = factor(alpha2),
group = factor(alpha2)),
size = 1)+
scale_x_continuous(breaks = c(-0.25, 0, 0.25))+
theme_bw(20)+
theme(legend.position = c(0.35,0.25),
legend.background = element_rect(color = "grey80"))+
ylim(-0.08, 0.04)+
scale_color_discrete(expression(alpha[2]))+
xlab(expression(beta[2]))+
ylab(expression(Bias~beta[1]))+
ggtitle("Joint Death"),
nrow=1)
dev.off()
#############################################################################
# Plot Alpha1 Bias confidence intervals
png("../simulation_results/NineScenario_Bias_Alpha.png",
width = 1200, height = 600)
gridExtra::grid.arrange(
sumtab %>% filter(Parameter == "Alpha, Terminal1") %>%
ggplot() +
geom_hline(aes(yintercept = 0), linetype = 2)+
geom_point(aes(x = trtD2+alpha2/20, y = bias, color = factor(alpha2)),
size = 4) +
#geom_line(aes(x = trtD2+alpha2/20,, y = bias, color = factor(alpha2), group = factor(alpha2))) +
geom_errorbar(aes(x = trtD2+alpha2/20,
ymin = bias-2*SD/sqrt(n),
ymax = bias+2*SD/sqrt(n),
color = factor(alpha2),
group = factor(alpha2)),
size = 1)+
scale_x_continuous(breaks = c(-0.25, 0, 0.25))+
theme_bw(20)+
theme(legend.position = "none")+
ylim(-0.2, 0.6)+
scale_color_discrete(expression(alpha[2]))+
xlab(expression(beta[2]))+
ylab(expression(Bias~alpha[1]))+
ggtitle("Competing Death and Discharge"),
sumtab %>% filter(Parameter == "Alpha, Terminal1") %>%
ggplot() +
geom_hline(aes(yintercept = 0), linetype = 2)+
geom_point(aes(x = trtD2+alpha2/20, y = bias.death, color = factor(alpha2)),
size = 4) +
#geom_line(aes(x = trtD2+alpha2/20,, y = bias.death, color = factor(alpha2), group = factor(alpha2))) +
geom_errorbar(aes(x = trtD2+alpha2/20,
ymin = bias.death-2*SD.death/sqrt(n.death),
ymax = bias.death+2*SD.death/sqrt(n.death),
color = factor(alpha2),
group = factor(alpha2)),
size = 1)+
scale_x_continuous(breaks = c(-0.25, 0, 0.25))+
theme_bw(20)+
theme(legend.position = c(0.35,0.25),
legend.background = element_rect(color = "grey80"))+
ylim(-0.2, 0.6)+
scale_color_discrete(expression(alpha[2]))+
xlab(expression(beta[2]))+
ylab(expression(Bias~alpha[1]))+
ggtitle("Joint Death"),
nrow=1)
dev.off()
######################################################################3
#### Tabulate Results (Across Alpha2, TrtD2)
sumtab %>% ungroup %>%
filter(Parameter %in% c("Alpha, Terminal1", "Recurrent: trt", "Terminal1: trt")) %>%
dplyr::select(scenario, Parameter, trtD2, alpha2, bias:Correct.discharge) %>%
dplyr::select(-bias.discharge:-Correct.discharge) %>%
gt(rowname_col = "Parameter",
groupname_col = "scenario")%>%
tab_stubhead(label = "Parameter")%>%
tab_header(title = md(paste0("**Competing Joint Model Simulation Results(R =",
round(nrow(merged)/12/length(unique(merged$scenario))),
", n = ", 1500,")**")))%>%
cols_label(bias = html("Competing Estimate"),
bias.death = html("Death Estimate"),
Correct = html("Correct %"),
Correct.death = html("Correct %"),
SD = html("SE"),
SD.death = html("SE"),
) %>%
fmt_number(c(4,7)+1,decimals = 4) %>%
fmt_number(c(5,8)+1,pattern = "({x})",decimals = 4)%>%
fmt_number(1+1, pattern = "Scenario {x}")%>%
fmt_number(c(6,9)+1,decimals = 1) %>%
fmt_missing(columns = (1:9)+1, missing_text = "") %>%
cols_align(columns = 3+1, align = c("center")) %>%
cols_align(columns = c(5,8)+1, align = c("left")) %>%
cols_align(columns = c(6,9)+1, align = c("center")) #%>%
######################################################################3
#### Tabulate Results (Across Alpha2, TrtD2)
sumtab %>% ungroup %>%
filter(Parameter %in% c("Alpha, Terminal1", "Recurrent: trt", "Terminal1: trt")) %>%
dplyr::select(scenario, Parameter, trtD2, alpha2, bias:Correct.discharge) %>%
dplyr::select(-bias.discharge:-Correct.discharge) %>%
gt(rowname_col = "Parameter",
groupname_col = "scenario")%>%
tab_stubhead(label = "Parameter")%>%
tab_header(title = md(paste0("**Competing Joint Model Simulation Results(R =",
round(nrow(merged)/12/length(unique(merged$scenario))),
", n = ", 1500,")**")))%>%
cols_label(bias = html("Competing Estimate"),
bias.death = html("Death Estimate"),
Correct = html("Correct %"),
Correct.death = html("Correct %"),
SD = html("SE"),
SD.death = html("SE"),
) %>%
fmt_number(c(4,7)+1,decimals = 4) %>%
fmt_number(c(5,8)+1,pattern = "({x})",decimals = 4)%>%
fmt_number(1+1, pattern = "Scenario {x}")%>%
fmt_number(c(6,9)+1,decimals = 1) %>%
fmt_missing(columns = (1:9)+1, missing_text = "") %>%
cols_align(columns = 3+1, align = c("center")) %>%
cols_align(columns = c(5,8)+1, align = c("left")) %>%
cols_align(columns = c(6,9)+1, align = c("center")) %>%
as_latex() %>%as.character() %>%cat()
meta <-     expand.grid(betaR = 0.5, etaR = 66,
betaD = 1.6, etaD = 25.2,
betaD2 = 1.3, etaD2 = 7.7,
sigma = c(0.5, 0.75, 1),
alpha1 = c(-0.5, 0, 0.5),
alpha2 = c(-0.5, 0, 0.5),
trtR = c(-0.25, 0, 0.25),
trtD = c(-0.25, 0, 0.25),
trtD2 = c(-0.25, 0, 0.25),
i = 1:5000) %>%
mutate(simid = 1:n(),
scenario = ((simid-1) %% 729)+1,
seed = cumsum(10 + rpois(n(),10)),
n = 1500) %>%
filter(scenario %in% c(8,17,26,251,260,269,494,503,512))
table(meta$scenario)
meta %>% filter(scenario == 17) %>% summarise(all(trtD == trtD[1]))
meta <-     expand.grid(betaR = 0.5, etaR = 66,
betaD = 1.6, etaD = 25.2,
betaD2 = 1.3, etaD2 = 7.7,
sigma = c(0.5, 0.75, 1),
alpha1 = c(-0.5, 0, 0.5),
alpha2 = c(-0.5, 0, 0.5),
trtR = c(-0.25, 0, 0.25),
trtD = c(-0.25, 0, 0.25),
trtD2 = c(-0.25, 0, 0.25),
i = 1:5000) %>%
mutate(simid = 1:n(),
scenario = ((simid-1) %% 729)+1,
seed = cumsum(10 + rpois(n(),10)),
n = 1500) %>%
filter(scenario %in% c(8,17,26,251,260,269,494,503,512))
save(meta, file = "../simulation_results/metaData2.rdata")
set.seed(20220203)
meta <-     expand.grid(betaR = 0.5, etaR = 66,
betaD = 1.6, etaD = 25.2,
betaD2 = 1.3, etaD2 = 7.7,
sigma = c(0.5, 0.75, 1),
alpha1 = c(-0.5, 0, 0.5),
alpha2 = c(-0.5, 0, 0.5),
trtR = c(-0.25, 0, 0.25),
trtD = c(-0.25, 0, 0.25),
trtD2 = c(-0.25, 0, 0.25),
i = 1:5000) %>%
mutate(simid = 1:n(),
scenario = ((simid-1) %% 729)+1,
seed = cumsum(10 + rpois(n(),10)),
n = 1500) %>%
filter(scenario %in% c(8,17,26,251,260,269,494,503,512))
meta <-     expand.grid(betaR = 0.5, etaR = 66,
betaD = 1.6, etaD = 25.2,
betaD2 = 1.3, etaD2 = 7.7,
sigma = c(0.5, 0.75, 1),
alpha1 = c(-0.5, 0, 0.5),
alpha2 = c(-0.5, 0, 0.5),
trtR = c(-0.25, 0, 0.25),
trtD = c(-0.25, 0, 0.25),
trtD2 = c(-0.25, 0, 0.25),
i = 1:4000) %>%
mutate(simid = 1:n(),
scenario = ((simid-1) %% 729)+1,
seed = cumsum(10 + rpois(n(),10)),
n = 1500) %>%
filter(scenario %in% c(8,17,26,251,260,269,494,503,512))
set.seed(20220203)
meta <-     expand.grid(betaR = 0.5, etaR = 66,
betaD = 1.6, etaD = 25.2,
betaD2 = 1.3, etaD2 = 7.7,
sigma = c(0.5, 0.75, 1),
alpha1 = c(-0.5, 0, 0.5),
alpha2 = c(-0.5, 0, 0.5),
trtR = c(-0.25, 0, 0.25),
trtD = c(-0.25, 0, 0.25),
trtD2 = c(-0.25, 0, 0.25),
i = 1:4000) %>%
mutate(simid = 1:n(),
scenario = ((simid-1) %% 729)+1,
seed = cumsum(10 + rpois(n(),10)),
n = 1500) %>%
filter(scenario %in% c(8,17,26,251,260,269,494,503,512))
save(meta, file = "../simulation_results/metaData2.rdata")
log(2)
exp(2)^0.98
2^0.98
2^-0.88
