TRTR = mean(V10),
TRTD = mean(V11),
TRTD2 = mean(V12), .groups = "keep") %>%
ungroup %>%
arrange(r) %>%
print.data.frame
results
results <-
b0 %>% as_tibble() %>%
mutate(simid=simid,
r = simid %/% 5000,
Truth = map(Truth, ~as.matrix(.) %>% t() %>% as_tibble)) %>%
unnest(Truth) %>%
group_by(r:trtD2) %>%
summarise(BetaR = mean(exp(V1)^2),
EtaR = mean(exp(V2)^2),
BetaD = mean(exp(V3)^2),
EtaD = mean(exp(V4)^2),
BetaD2 = mean(exp(V5)^2),
EtaD2 = mean(exp(V6)^2),
Theta = mean(exp(V7)^2),
Alpha1 = mean(V8),
Alpha2 = mean(V9),
TRTR = mean(V10),
TRTD = mean(V11),
TRTD2 = mean(V12), .groups = "keep") %>%
ungroup %>%
arrange(r)
b0 %>% as_tibble() %>%
mutate(simid=simid,
r = simid %/% 5000,
Truth = map(Truth, ~as.matrix(.) %>% t() %>% as_tibble)) %>%
unnest(Truth) %>%
group_by(r:trtD2)
results <-
b0 %>% as_tibble() %>%
mutate(simid=simid,
r = simid %/% 5000,
Truth = map(Truth, ~as.matrix(.) %>% t() %>% as_tibble)) %>%
unnest(Truth) %>%
group_by(r,trtD2) %>%
summarise(BetaR = mean(exp(V1)^2),
EtaR = mean(exp(V2)^2),
BetaD = mean(exp(V3)^2),
EtaD = mean(exp(V4)^2),
BetaD2 = mean(exp(V5)^2),
EtaD2 = mean(exp(V6)^2),
Theta = mean(exp(V7)^2),
Alpha1 = mean(V8),
Alpha2 = mean(V9),
TRTR = mean(V10),
TRTD = mean(V11),
TRTD2 = mean(V12),
betaR=betaR[1],
etaR=etaR[1],
betaD=betaD[1],
etaD=etaD[1],
betaD2=betaD2[1],
etaD2=etaD2[1],
theta=theta[1],
alpha1=alpha1[1], alpha2=alpha2[1],
trtR=trtR[1], trtD=trtD[1], trtD2=trtD2[1]) %>%
ungroup %>%
arrange(r)
results
results <-
b0 %>% as_tibble() %>%
mutate(simid=simid,
r = simid %/% 5000,
Truth = map(Truth, ~as.matrix(.) %>% t() %>% as_tibble)) %>%
unnest(Truth) %>%
group_by(r,trtD2) %>%
summarise(BetaR = mean(exp(V1)^2),
betaR=betaR[1],
EtaR = mean(exp(V2)^2),
etaR=etaR[1],
BetaD = mean(exp(V3)^2),
betaD=betaD[1],
EtaD = mean(exp(V4)^2),
etaD=etaD[1],
BetaD2 = mean(exp(V5)^2),
betaD2=betaD2[1],
EtaD2 = mean(exp(V6)^2),
etaD2=etaD2[1],
Theta = mean(exp(V7)^2),
theta=theta[1],
Alpha1 = mean(V8), alpha1=alpha1[1],
Alpha2 = mean(V9), alpha2=alpha2[1],
TRTR = mean(V10), trtR=trtR[1],
TRTD = mean(V11), trtD=trtD[1],
TRTD2 = mean(V12), trtD2=trtD2[1]) %>%
ungroup %>%
arrange(r)
results
results <-
b0 %>% as_tibble() %>%
mutate(simid=simid,
r = simid %/% 5000,
Truth = map(Truth, ~as.matrix(.) %>% t() %>% as_tibble)) %>%
unnest(Truth) %>%
group_by(r) %>%
summarise(BetaR = mean(exp(V1)^2),
betaR=betaR[1],
EtaR = mean(exp(V2)^2),
etaR=etaR[1],
BetaD = mean(exp(V3)^2),
betaD=betaD[1],
EtaD = mean(exp(V4)^2),
etaD=etaD[1],
BetaD2 = mean(exp(V5)^2),
betaD2=betaD2[1],
EtaD2 = mean(exp(V6)^2),
etaD2=etaD2[1],
Theta = mean(exp(V7)^2),
theta=theta[1],
Alpha1 = mean(V8), alpha1=alpha1[1],
Alpha2 = mean(V9), alpha2=alpha2[1],
TRTR = mean(V10), trtR=trtR[1],
TRTD = mean(V11), trtD=trtD[1],
TRTD2 = mean(V12), trtD2=trtD2[1]) %>%
ungroup %>%
arrange(r)
results
results %>% select(Theta:trtD2)
simValues <-
expand.grid(betaR = 1, etaR = 1,
betaD = 1.85, etaD = 25,
betaD2 = 1.15, etaD2 = 10,
theta = c(0.1, 0.2, 0.5),
alpha1 = c(-0.2, 0, 0.2),
alpha2 = c(-0.2, 0, 0.2),
trtR = c(-0.1, 0, 0.1),
trtD = c(-0.1, 0, 0.1),
trtD2 = c(-0.1, 0, 0.1)) %>%
mutate(r = 1:n(),
seed = cumsum(1000 + rpois(n(),10)),
n = 1500)
simValues
unlist(simValues[1,1:12])
unlist(simValues[1,1:12]) %>% class
unlist(simValues[1,1:12]) %>% typeof
unlist(simValues[1,1:12]) %>% dim
library(tidyverse)
set.seed(20220107)
simValues <-
expand.grid(betaR = 1, etaR = 1,
betaD = 1.85, etaD = 25,
betaD2 = 1.15, etaD2 = 10,
theta = c(0.1, 0.2, 0.5),
alpha1 = c(-0.2, 0, 0.2),
alpha2 = c(-0.2, 0, 0.2),
trtR = c(-0.1, 0, 0.1),
trtD = c(-0.1, 0, 0.1),
trtD2 = c(-0.1, 0, 0.1)) %>%
mutate(r = 1:n(),
seed = cumsum(1000 + rpois(n(),10)),
n = 1500)
saveRDS(simValues, file = "../reduce_data/Simulation_Values_MetaData.rdata")
saveRDS(simValues, file = "../simulation_results/Simulation_Values_MetaData.rdata")
simValues
simValues <-
expand.grid(betaR = 1, etaR = 1,
betaD = 1.85, etaD = 25,
betaD2 = 1.15, etaD2 = 10,
theta = c(0.1, 0.5),
alpha1 = c(-0.2, 0, 0.2),
alpha2 = c(-0.2, 0, 0.2),
trtR = c(-0.1, 0, 0.1),
trtD = c(-0.1, 0, 0.1),
trtD2 = c(-0.1, 0, 0.1)) %>%
mutate(r = 1:n(),
seed = cumsum(1000 + rpois(n(),10)),
n = 1500)
saveRDS(simValues, file = "../simulation_results/Simulation_Values_MetaData.rdata")
dim(simValues)
1234%/%1000
234%/%1000
library(tidyverse)
df <- read_csv("../reduce_data/reduce data.csv")
head(df)
df <- df %>%
mutate(letter = substr(CRF_letter_number, 0,1)) %>%
mutate(study_arm = factor(study_arm,
labels = c("Placebo", "Haloperidol (2mg)", "Haloperidol (1mg)"))) %>%
filter(!letter %in% c("L","M","N","Q","R","T","U")) %>%
select(died, gender, age, delirium_yes_no, apache,
losic, number_days_survived_28days,
study_arm, delirium_number_of_days, coma_number_of_days, matches(c("d.._coma","d.._delirium"))) %>%
mutate( id = 1:n(),
apache = ifelse(apache < 0, NA,apache),
discharged = (losic < number_days_survived_28days) | (losic == 28 & number_days_survived_28days == 28),
died = losic == number_days_survived_28days & number_days_survived_28days < 28,
censored = losic > 28)
# count delirium days
df <-
df %>%
select(id, d01_delirium:d28_delirium) %>%
pivot_longer(cols = d01_delirium:d28_delirium) %>%
mutate(value = ifelse(value < 0, NA, value)) %>%
group_by(id) %>%
summarise(delirium_days = sum(value, na.rm = T)) %>%
left_join(df, by = "id")
# count coma days
df <-
df %>%
select(id, d01_coma:d28_coma) %>%
pivot_longer(cols = d01_coma:d28_coma) %>%
mutate(value = ifelse(value < 0, NA, value)) %>%
group_by(id) %>%
summarise(coma_days = sum(value, na.rm = T)) %>%
left_join(df, by = "id")
df <- df %>%
mutate(letter = substr(CRF_letter_number, 0,1)) %>%
mutate(study_arm = factor(study_arm,
labels = c("Placebo", "Haloperidol (2mg)", "Haloperidol (1mg)"))) %>%
filter(!letter %in% c("L","M","N","Q","R","T","U")) %>%
select(died, gender, age, delirium_yes_no, apache,
losic, number_days_survived_28days,
study_arm, delirium_number_of_days, coma_number_of_days, matches(c("d.._coma","d.._delirium"))) %>%
mutate( id = 1:n(),
apache = ifelse(apache < 0, NA,apache),
discharged = (losic < number_days_survived_28days) | (losic == 28 & number_days_survived_28days == 28),
died = losic == number_days_survived_28days & number_days_survived_28days < 28,
censored = losic > 28,
outcome = ifelse(died, "Death", ifelse(discharged, "Discharged", "Censored")))
library(tidyverse)
df <- read_csv("../reduce_data/reduce data.csv")
head(df)
df <- df %>%
mutate(letter = substr(CRF_letter_number, 0,1)) %>%
mutate(study_arm = factor(study_arm,
labels = c("Placebo", "Haloperidol (2mg)", "Haloperidol (1mg)"))) %>%
filter(!letter %in% c("L","M","N","Q","R","T","U")) %>%
select(died, gender, age, delirium_yes_no, apache,
losic, number_days_survived_28days,
study_arm, delirium_number_of_days, coma_number_of_days, matches(c("d.._coma","d.._delirium"))) %>%
mutate( id = 1:n(),
apache = ifelse(apache < 0, NA,apache),
discharged = (losic < number_days_survived_28days) | (losic == 28 & number_days_survived_28days == 28),
died = losic == number_days_survived_28days & number_days_survived_28days < 28,
censored = losic > 28,
outcome = ifelse(died, "Death", ifelse(discharged, "Discharged", "Censored")))
# count delirium days
df <-
df %>%
select(id, d01_delirium:d28_delirium) %>%
pivot_longer(cols = d01_delirium:d28_delirium) %>%
mutate(value = ifelse(value < 0, NA, value)) %>%
group_by(id) %>%
summarise(delirium_days = sum(value, na.rm = T)) %>%
left_join(df, by = "id")
# count coma days
df <-
df %>%
select(id, d01_coma:d28_coma) %>%
pivot_longer(cols = d01_coma:d28_coma) %>%
mutate(value = ifelse(value < 0, NA, value)) %>%
group_by(id) %>%
summarise(coma_days = sum(value, na.rm = T)) %>%
left_join(df, by = "id")
ggplot(df) +
geom_jitter(aes(x = losic, y = delirium_yes_no)) +
facet_wrap("outcome")
ggplot(df) +
geom_jitter(aes(x = pmin(losic, 28), y = delirium_yes_no)) +
facet_wrap("outcome")
ggplot(df, aes(x = pmin(losic, 28), y = delirium_yes_no)) +
geom_jitter() +
stat_smooth()+
facet_wrap("outcome")
group_by(outcome,study_los) %>%
summarise(del_rate = delirium_days/study_los) %>%
ggplot(df, aes(x = study_los, y = del_rate)) +
geom_line() +
facet_wrap("outcome")
df <- read_csv("../reduce_data/reduce data.csv")
head(df)
df <- df %>%
mutate(letter = substr(CRF_letter_number, 0,1)) %>%
mutate(study_arm = factor(study_arm,
labels = c("Placebo", "Haloperidol (2mg)", "Haloperidol (1mg)"))) %>%
filter(!letter %in% c("L","M","N","Q","R","T","U")) %>%
select(died, gender, age, delirium_yes_no, apache,
losic, number_days_survived_28days,
study_arm, delirium_number_of_days, coma_number_of_days, matches(c("d.._coma","d.._delirium"))) %>%
mutate( id = 1:n(),
apache = ifelse(apache < 0, NA,apache),
discharged = (losic < number_days_survived_28days) | (losic == 28 & number_days_survived_28days == 28),
died = losic == number_days_survived_28days & number_days_survived_28days < 28,
censored = losic > 28,
outcome = ifelse(died, "Death", ifelse(discharged, "Discharged", "Censored")))
# count delirium days
df <-
df %>%
select(id, d01_delirium:d28_delirium) %>%
pivot_longer(cols = d01_delirium:d28_delirium) %>%
mutate(value = ifelse(value < 0, NA, value)) %>%
group_by(id) %>%
summarise(delirium_days = sum(value, na.rm = T)) %>%
left_join(df, by = "id")
# count coma days
df <-
df %>%
select(id, d01_coma:d28_coma) %>%
pivot_longer(cols = d01_coma:d28_coma) %>%
mutate(value = ifelse(value < 0, NA, value)) %>%
group_by(id) %>%
summarise(coma_days = sum(value, na.rm = T)) %>%
left_join(df, by = "id")
df$outcome
group_by(outcome,study_los) %>%
summarise(del_rate = delirium_days/study_los) %>%
ggplot(df, aes(x = study_los, y = del_rate)) +
geom_line() +
facet_wrap("outcome")
group_by(outcome,study_los) %>%
summarise(del_rate = delirium_days/study_los) %>%
ungroup %>%
ggplot(aes(x = study_los, y = del_rate)) +
geom_line() +
facet_wrap("outcome")
df %>%
mutate(study_los = pmin(losic, 28))
group_by(outcome,study_los) %>%
summarise(del_rate = delirium_days/study_los) %>%
ungroup
group_by(outcome,study_los) %>%
summarise(del_rate = mean(delirium_days/study_los)) %>%
ungroup %>%
ggplot(aes(x = study_los, y = del_rate)) +
geom_line() +
facet_wrap("outcome")
df %>%
mutate(study_los = pmin(losic, 28))
group_by(outcome,study_los) %>%
summarise(del_rate = mean(delirium_days/study_los))
df
df %>%
mutate(study_los = pmin(losic, 28)) %>%
group_by(outcome,study_los) %>%
summarise(del_rate = mean(delirium_days/study_los)) %>%
ungroup %>%
ggplot(aes(x = study_los, y = del_rate)) +
geom_line() +
facet_wrap("outcome")
df %>%
mutate(study_los = pmin(losic, 28)) %>%
group_by(outcome,study_los) %>%
summarise(del_rate = mean(delirium_days/study_los)) %>%
ungroup %>%
ggplot(aes(x = study_los, y = del_rate)) +
geom_point() +
geom_line() +
facet_wrap("outcome")
df %>%
mutate(study_los = pmin(losic, 28)) %>%
group_by(outcome,study_los) %>%
summarise(del_rate = mean(delirium_days/study_los),
coma_rate = mean(coma_days/study_los)) %>%
ungroup %>%
ggplot(aes(x = study_los, y = del_rate)) +
geom_point() +
geom_line(aes(x = study_los, y = del_rate)) +
geom_line(aes(x = study_los, y = coma_rate), color = "red") +
facet_wrap("outcome")
table(df$losic)
df %>%
mutate(study_los = pmin(losic, 28)) %>%
group_by(outcome,study_los) %>%
summarise(del_rate = mean(delirium_days/study_los),
coma_rate = mean(coma_days/study_los)) %>%
ungroup %>%
filter(study_los > 0) %>%
ggplot(aes(x = study_los, y = del_rate)) +
geom_point() +
geom_line(aes(x = study_los, y = del_rate)) +
geom_line(aes(x = study_los, y = coma_rate), color = "red") +
facet_wrap("outcome")
df %>%
mutate(study_los = pmin(losic, 28)) %>%
group_by(outcome,study_los) %>%
summarise(del_rate = mean(delirium_days/study_los),
coma_rate = mean(coma_days/study_los)) %>%
ungroup %>%
filter(study_los > 0) %>%
ggplot() +
geom_point(aes(x = study_los, y = del_rate)) +
geom_point(aes(x = study_los, y = coma_rate), color = "red") +
geom_line(aes(x = study_los, y = del_rate)) +
geom_line(aes(x = study_los, y = coma_rate), color = "red") +
facet_wrap("outcome")
df %>%
mutate(study_los = pmin(losic, 28)) %>%
group_by(outcome,study_los) %>%
summarise(del_rate = mean(delirium_days/study_los),
coma_rate = mean(coma_days/study_los)) %>%
ungroup %>%
filter(study_los > 0) %>%
ggplot() +
geom_point(aes(x = study_los, y = del_rate)) +
geom_point(aes(x = study_los, y = coma_rate), color = "red") +
geom_line(aes(x = study_los, y = del_rate)) +
geom_line(aes(x = study_los, y = coma_rate), color = "red") +
stat_smooth(aes(x = study_los, y = del_rate), se = F) +
stat_smooth(aes(x = study_los, y = coma_rate), se = F) +
facet_wrap("outcome")
df %>% filter(died & losic==1)
df %>% filter(died & losic==1) %>% summarise(mean(coma_days))
df %>%
mutate(study_los = pmin(losic, 28) + 1) %>%
group_by(outcome,study_los) %>%
summarise(del_rate = mean(delirium_days/study_los),
coma_rate = mean(coma_days/study_los)) %>%
ungroup %>%
filter(study_los > 0) %>%
ggplot() +
geom_point(aes(x = study_los, y = del_rate)) +
geom_point(aes(x = study_los, y = coma_rate), color = "red") +
geom_line(aes(x = study_los, y = del_rate)) +
geom_line(aes(x = study_los, y = coma_rate), color = "red") +
stat_smooth(aes(x = study_los, y = del_rate), se = F) +
stat_smooth(aes(x = study_los, y = coma_rate), se = F) +
facet_wrap("outcome")
df %>%
mutate(study_los = pmin(losic, 28) + 1) %>%
group_by(outcome,study_los) %>%
summarise(del_rate = mean(delirium_days/study_los),
coma_rate = mean(coma_days/study_los)) %>%
ungroup %>%
filter(study_los > 0) %>%
ggplot() +
geom_point(aes(x = study_los, y = del_rate)) +
geom_point(aes(x = study_los, y = coma_rate), color = "red") +
geom_line(aes(x = study_los, y = del_rate)) +
geom_line(aes(x = study_los, y = coma_rate), color = "red") +
stat_smooth(aes(x = study_los, y = del_rate), se = F) +
stat_smooth(aes(x = study_los, y = coma_rate), se = F, color = "red") +
facet_wrap("outcome")
df %>%
mutate(study_los = pmin(losic, 28) + 1) %>%
group_by(outcome,study_los) %>%
summarise(del_rate = mean(delirium_days/study_los),
coma_rate = mean(coma_days/study_los)) %>%
ungroup %>%
filter(study_los > 0) %>%
ggplot() +
geom_point(aes(x = study_los, y = del_rate)) +
geom_point(aes(x = study_los, y = coma_rate), color = "red") +
geom_line(aes(x = study_los, y = del_rate)) +
geom_line(aes(x = study_los, y = coma_rate), color = "red") +
stat_smooth(aes(x = study_los, y = del_rate), se = F) +
stat_smooth(aes(x = study_los, y = coma_rate), se = F, color = "black") +
facet_wrap("outcome")
df %>%
mutate(study_los = pmin(losic, 28) + 1) %>%
group_by(outcome,study_los) %>%
summarise(del_rate = mean(delirium_days/study_los),
coma_rate = mean(coma_days/study_los),
delirium_prev = mean(delirium_yes_no)) %>%
ungroup %>%
filter(study_los > 0) %>%
ggplot() +
geom_point(aes(x = study_los, y = del_rate)) +
geom_point(aes(x = study_los, y = coma_rate), color = "red") +
geom_line(aes(x = study_los, y = del_rate)) +
geom_line(aes(x = study_los, y = delirium_prev), col = "darkgreen") +
geom_line(aes(x = study_los, y = coma_rate), color = "red") +
stat_smooth(aes(x = study_los, y = del_rate), se = F) +
stat_smooth(aes(x = study_los, y = coma_rate), se = F, color = "black") +
facet_wrap("outcome")
df %>%
mutate(study_los = pmin(losic, 28) + 1) %>%
group_by(outcome,study_los) %>%
summarise(delirium_prev = mean(delirium_yes_no)) %>%
ungroup %>%
filter(study_los > 0) %>%
ggplot() +
geom_line(aes(x = study_los, y = delirium_prev)) +
geom_point(aes(x = study_los, y = delirium_prev)) +
stat_smooth(aes(x = study_los, y = delirium_prev), se = F, color = "black") +
facet_wrap("outcome")
df %>%
mutate(study_los = pmin(losic, 28) + 1) %>%
group_by(outcome,study_los) %>%
summarise(delirium_prev = mean(delirium_yes_no)) %>%
ungroup %>%
filter(study_los > 0) %>%
ggplot() +
geom_line(aes(x = study_los, y = delirium_prev)) +
geom_point(aes(x = study_los, y = delirium_prev)) +
#stat_smooth(aes(x = study_los, y = delirium_prev), se = F, color = "black") +
facet_wrap("outcome")
exp(-0.485371327858641)^2
exp( -2.30258509299405)^2
exp(-2.30258509299405*2)
exp(-0.330550198939755*2)
library(tidyverse)
set.seed(20220107)
simValues <-
expand.grid(betaR = 1, etaR = 10,
betaD = 1.85, etaD = 25,
betaD2 = 1.15, etaD2 = 10,
theta = c(0.1, 0.5),
alpha1 = c(-0.2, 0, 0.2),
alpha2 = c(-0.2, 0, 0.2),
trtR = c(-0.1, 0, 0.1),
trtD = c(-0.1, 0, 0.1),
trtD2 = c(-0.1, 0, 0.1)) %>%
mutate(r = 1:n(),
seed = cumsum(1000 + rpois(n(),10)),
n = 1500)
saveRDS(simValues, file = "../simulation_results/Simulation_Values_MetaData.rdata")
